{"ast":null,"code":"var _jsxFileName = \"/Users/yanghaochen/Desktop/CS185/CS185_hw8/src/Components/Add_movie.js\";\nimport React, { Component } from 'react';\nimport config from '../config.js'; // import './Movie.css';\n\nconst axios = require('axios');\n\nconst firebase = require('firebase');\n\nexport class Add_movie extends Component {\n  constructor(props) {\n    super();\n\n    this.myFormHandler = event => {\n      event.preventDefault();\n      let req = 'https://www.omdbapi.com/?apikey=2259a45a&i=' + this.state.movId;\n      this.getMovieName(this, req);\n    };\n\n    this.inputHandler = event => {\n      let field = event.target.name;\n      let value = event.target.value;\n      this.setState({\n        [field]: value\n      });\n    };\n\n    this.state = {\n      movId: '',\n      src: '',\n      title: '',\n      director: '',\n      imdb: '',\n      plot: '',\n      actors: ''\n    };\n  }\n\n  componentDidMount() {\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  updateDb(obj) {\n    console.log(obj.state.actors);\n    let formObj = {\n      name: obj.state.title,\n      src: obj.state.src,\n      director: obj.state.director,\n      imdb: obj.state.imdb,\n      plot: obj.state.plot,\n      actors: obj.state.actors\n    };\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(function (snapshot) {\n      let movExists = snapshot.child(obj.state.movId).exists();\n\n      if (movExists) {\n        alert('Already existed');\n      } else {\n        ref.child(obj.state.movId).set(formObj);\n        alert('Movie has been add');\n      }\n    });\n  }\n\n  getMovieName(obj, req) {\n    axios.get(req).then(function (response) {\n      obj.setState({\n        src: response.data.Poster,\n        title: response.data.Title,\n        director: response.data.Director,\n        imdb: response.data.imdbRating,\n        plot: response.data.Plot,\n        actors: response.data.Actors\n      });\n    }).then(function () {\n      obj.updateDb(obj);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.myFormHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Add a New Movie\"), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, \"Movie ID\"), /*#__PURE__*/React.createElement(\"input\", {\n      name: \"movId\",\n      type: \"text\",\n      required: true,\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 90\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"color_grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 39\n      }\n    }, \"* Please give the imdbID of the movie\"), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      name: \"submit\",\n      value: \"SUBMIT\",\n      style: {\n        width: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 35\n      }\n    }))));\n  }\n\n}\nexport default Add_movie;","map":{"version":3,"sources":["/Users/yanghaochen/Desktop/CS185/CS185_hw8/src/Components/Add_movie.js"],"names":["React","Component","config","axios","require","firebase","Add_movie","constructor","props","myFormHandler","event","preventDefault","req","state","movId","getMovieName","inputHandler","field","target","name","value","setState","src","title","director","imdb","plot","actors","componentDidMount","apps","length","initializeApp","updateDb","obj","console","log","formObj","ref","database","once","then","snapshot","movExists","child","exists","alert","set","get","response","data","Poster","Title","Director","imdbRating","Plot","Actors","catch","error","render","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport config from '../config.js';\n// import './Movie.css';\n\n\nconst axios = require('axios');\nconst firebase = require('firebase')\n\n\nexport class Add_movie extends Component {\n  constructor(props) {\n    super();\n    this.state = { movId: '', src: '', title: '', director: '', imdb: '',plot: '', actors: '',}\n  }\n\n  componentDidMount(){\n    if (!firebase.apps.length) {\n      firebase.initializeApp(config);\n    }\n  }\n\n  myFormHandler = (event) => {\n    event.preventDefault();\n    let req = 'https://www.omdbapi.com/?apikey=2259a45a&i='+this.state.movId;\n    this.getMovieName(this, req);\n  }\n\n  inputHandler = (event) => {\n    let field = event.target.name;\n    let value = event.target.value;\n    this.setState({[field]: value});\n  }\n\n  updateDb(obj) {\n    console.log(obj.state.actors);\n    let formObj = {\n      name: obj.state.title,\n      src: obj.state.src,\n      director: obj.state.director,\n      imdb: obj.state.imdb,\n      plot: obj.state.plot,\n      actors: obj.state.actors,\n    };\n    let ref = firebase.database().ref('movies');\n    ref.once('value').then(function(snapshot) {\n      let movExists = snapshot.child(obj.state.movId).exists();\n      if(movExists) {\n        alert('Already existed');\n      } \n      else {\n        ref.child(obj.state.movId).set(formObj);\n        alert('Movie has been add');\n      }\n    });\n  }\n\n  getMovieName(obj, req) {\n    axios.get(req)\n    .then(function (response) {\n      obj.setState({\n        src: response.data.Poster,\n        title: response.data.Title,\n        director: response.data.Director,\n        imdb: response.data.imdbRating,\n        plot: response.data.Plot,\n        actors: response.data.Actors,\n      });\n    })\n    .then(function () {\n      obj.updateDb(obj);\n    })\n    .catch(function (error) {\n      console.log(error);\n    })\n  }\n\n  render() {\n    return(\n      <div>\n        <form onSubmit={this.myFormHandler}>\n          <h1>Add a New Movie</h1>\n          <h3>Movie ID</h3>\n          <input name='movId' type='text'  required onChange={this.inputHandler}></input><br/>\n          <div className=\"color_grey\"><h5>* Please give the imdbID of the movie</h5> </div>\n          <div className=\"submit\"><input type='submit' name='submit' value='SUBMIT' style={{width: \"300px\"}}></input></div>\n          \n        </form>\n      </div>      \n    );\n  }\n}\nexport default Add_movie;\n"]},"metadata":{},"sourceType":"module"}